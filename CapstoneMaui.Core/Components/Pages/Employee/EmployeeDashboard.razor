@using MudBlazor
@using MudBlazor.Components
@using CapstoneMaui.Core.Models
@namespace CapstoneMaui.Core.Components.Pages.Employee
@page "/employee-dashboard"





<MudStack AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween" Spacing="3" Style="max-height: 100vh;">


<MudSelect T="string" @bind-Value="selectedSite" Label="Select Job Site" Variant="Variant.Outlined">
    <MudSelectItem Value="@sites[0].Id">Downtown Construction Site</MudSelectItem>
    <MudSelectItem Value="@sites[1].Id">Uptown Renovation Project</MudSelectItem>
    <MudSelectItem Value="@sites[2].Id">Suburban Housing Development</MudSelectItem>
</MudSelect>

<ToDo/>


<JobSiteMap currentSiteId="@selectedSite" Height="55vh" Sites="@sites" OnChanged="@((site) => SaveSite(this, site))" />


<MudText Typo="Typo.body1">Hours Worked: @hoursWorked</MudText>

@if (clockedIn)
{
    <MudButton Variant="Variant.Filled" FullWidth="true" Color="Color.Secondary" OnClick="ClockOut">
        Clock Out
    </MudButton>
}
else {
    <MudButton Variant="Variant.Filled" FullWidth="true" Color="Color.Primary" OnClick="ClockIn">
        Clock In
    </MudButton>
}
<MudStack Row=true Justify="Justify.SpaceBetween">
    <MudIconButton Icon="@Icons.Material.Filled.Wallet" Color="Color.Info" Size="Size.Large" />
    <MudButton Variant="Variant.Filled">Request</MudButton>
    <MudIconButton Icon="@Icons.Material.Filled.Notifications" Color="Color.Warning" Size="Size.Large" />
</MudStack>
   
</MudStack  >


@code {
    private bool clockedIn = false;

    private string selectedSite = string.Empty;
    public List<SiteDto> sites = new()
    {
        new SiteDto(Guid.NewGuid(), "Downtown Construction Site", 47.6062, -122.3321, 100),
        new SiteDto(Guid.NewGuid(), "Uptown Renovation Project", 47.6205, -122.3493, 150),
        new SiteDto(Guid.NewGuid(), "Suburban Housing Development", 47.5301, -122.0326, 200)
    };

    public void SaveSite(object? sender, SiteDto site)
    {
        //handle site change
    }

    private int hoursWorked = 0;
    private void ClockIn()
    {
        //basic clock in, implement check for actual clock in later
        clockedIn = true;
    }
    private void ClockOut()
    {
        //basic clock out, implement check for actual clock out later
        clockedIn = false;
    }
}
